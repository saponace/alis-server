user root;
worker_processes 4;

events {
    worker_connections 768;
    # multi_accept on;
}



http {
    include /etc/nginx/mime.types;


    upstream transmission {
        server 127.0.0.1:9091;
    }
    upstream kodi {
        server 127.0.0.1:8080;
    }
    upstream sonarr {
        server 127.0.0.1:8989;
    }
    upstream radarr {
        server 127.0.0.1:7878;
    }
    upstream jackett {
        server 127.0.0.1:9117;
    }
    upstream glances {
        server 127.0.0.1:61208;
    }

    server {
        listen 80;
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443;
        server_name somde.ddns.net;
        ssl on;
        ssl_certificate /etc/letsencrypt/live/somde.ddns.net/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/somde.ddns.net/privkey.pem; # managed by Certbot

        root /mnt/web-server/;


        satisfy any;  # Combine IP and basic auth restrictions (need to satisfy any of both restrictions)

        # IP restriction
            allow 127.0.0.1;
            deny all;

        # HTTP basic auth
            auth_basic           "Restricted content";
            auth_basic_user_file /etc/nginx/.htpasswd;


        # Locations
        location /cv {
            auth_basic off;
        }
        location /keeweb/{}
        location /transmission {
            proxy_pass http://transmission;
        }
        location /kodi/ {
            proxy_pass         http://kodi$uri;
            rewrite            ^ $request_uri;
            rewrite            ^([^.]*[^/])$ $1/ permanent;
            rewrite            ^/kodi/(.*)  /$1  break;
            proxy_redirect     http://kodi   /kodi/;
            proxy_set_header   Host $http_host;
            proxy_redirect     off;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Scheme $scheme;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
        }
            # For kodi
            # Shouldn't need this when proxy headers are turned on. No idea why it does not work (Settings -> Web interface -> Reverse proxy support)
            location ~ ^/(image|jsonrpc) {
                proxy_pass         http://kodi;
                proxy_set_header   Upgrade $http_upgrade;
                proxy_set_header   Connection "upgrade";
            }
        location /radarr {
            proxy_pass http://radarr;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /sonarr {
            proxy_pass http://sonarr;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /jackett/ {
            proxy_pass http://jackett/;
            rewrite /jackett/(.*) /$1 break;
            proxy_bind $server_addr;
        }
        location /glances/ {
            proxy_pass http://glances/;
        }
    }
}
